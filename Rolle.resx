<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAA+gAAALuCAYAAAA9jTxNAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAGZ5JREFUeF7t3CGMn/Udx3EEYqJiomICcQKBQCAqJipOICYQFQhExYkJRAUCUYGo
        q0CwBIHYspvZKsjCEgQCcWICQbIKBIIst4QsCAQCUbFk2/d/art9Yc/z+93z9HPweiVv8/yTQtp/7//9
        0B7PwDVzVP3rCjuvAAAAgJUMdAAAAAhgoAMAAECAX1Xd0B7tmwoAAABY6bdVN7RH+3sFAAAArPS7qhva
        o/kr7gAAADDAQAcAAIAABjoAAAAEMNABAAAggIEOAAAAAQx0AAAACGCgAwAAQAADHQAAAAL8oeqG9mh/
        rQAAAICV/lR1Q3u0xxUAAACwkoEOAAAAAQx0AAAACGCgAwAAQAADHQAAAAIY6AAAABDgt1U3tEf7ogIA
        AABW+k3VDe3RDHQAAAAYYKADAABAgD9W3dAe7bMKAAAAWMn/JA4AAAACGOgAAAAQwEAHAACAAH+ouqE9
        moEOAAAAA06qbmiP9vsKAAAAWOmqB/ppBQAAAKxkoAMAAEAAAx0AAAACGOgAAAAQwEAHAACAAAY6AAAA
        BDDQAQAAIICBDgAAAAEMdAAAAAhgoAMAAEAAAx0AAAACGOgAAAAQwEAHAACAAAY6AAAABDDQAQAAIICB
        DgAAAAEMdAAAAAhgoAMAAEAAAx0AAAACGOgAAAAQwEAHAACAAAY6AAAABDDQAQAAIICBDgAAAAEMdAAA
        AAjwctUN7dE+rgAAAICVjqtuaI92VgEAAAArGegAAAAQwEAHAACAAAY6AAAABDDQAQAAIICBDgAAAAEM
        dAAAAAhgoAMAAEAAAx0AAAACGOgAAAAQwEAHAACAAAY6AAAABDDQAQAAIICBDgAAAAEMdAAAAAhgoAMA
        AEAAAx0AAAACGOgAAAAQwEAHAACAAAY6AAAABDDQAQAAIICBDgAAAAEMdAAAAAhgoAMAAEAAAx0AAAAC
        GOgAAAAQwEAHAACAAAY6AAAABDDQAQAAIICBDgAAAAEMdAAAAAhgoAMAAEAAAx0AAAACvFB1Q3u0zysA
        AABgpaOqG9qjnVcAAADASgY6AAAABDDQAQAAIICBDgAAAAEMdAAAAAhgoAMAAEAAAx0AAAACGOgAAAAQ
        wEAHAACAAAY6AAAABDDQAQAAIICBDgAAAAEMdAAAAAhgoAMAAEAAAx0AAAACGOgAAAAQwEAHAACAAAY6
        AAAABDDQAQAAIICBDgAAAAEMdAAAAAhgoAMAAEAAAx0AAAACGOgAAAAQwEAHAACAAAY6AAAABDDQAQAA
        IICBDgAAAAEMdAAAAAhgoAMAAEAAAx0AAAACGOgAAAAQwEAHAACAADeqbmiP9qQCAAAABnRDeyYAAABg
        QDeyZwIAAAAGdCN7JgAAAGBAN7JnAgAAAAZ0I3smAAAAYEA3smcCAAAABnQjeyYAAABgQDeyZwIAAAAG
        dCN7JgAAAGBAN7JnAgAAAAZ0I3smAAAAYEA3smcCAOBq3ayOdur56njH7lQnO/Zgx96pTnfsbMc+rc53
        7B9Vtz3+X3DtdG/kmQD4cXiu6o77LXqx6g77rXqt6g77LXq96g77rXqv6g77LXpUdYf9Vn1WdYf9Fn1Z
        dXeQpKzg2uneyDPB0/Js1R32W3Wr6g77reoO+616o+oO+63qDvut+qDqDvut+qLqjvst+rrqvi5LkvRj
        Df7Ljao77LfqdtUd9t9X90aeqTv2r6L7VXfYb9HDqjvst+qjqjvst+jPVXfYb9W3Vfc+kSRJkrauPfav
        It+/cHWNfv+CJEmSJOn61D6UJEmSJEn71j6UJEmSJEn71j6UJEmSJEn71j6UJEmSJEn71j6UJEmSJEn7
        1j6UJEmSJEn71j6UJEmSJEn71j6UJEmSJEn71j6UJEmSJEn71j6UJEmSJEn71j6UJEmSJEn71j6UJEmS
        JEn71j6UJEmSJEn71j6UJEmSJEn71j6UJEmSJEn71j6UJEmSpNG+qc537GzHPqhOd+zBjr1ZnezYy9Xx
        Tt2qjnbs2WpI9xtKkiTph9ZXVXfYb9HnVXfYb9Wjqjvst+i9qjvst+pe1R32W3S36g77rXqx6g77LXqu
        Aq6B7gNMkrRP3WG/VY+r7rDfqu6w36p3qu6w36pfVt1xv0WvVt1hv1XPV91xv0U3KwDgP3QHo368Pam6
        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
</value>
  </data>
</root>